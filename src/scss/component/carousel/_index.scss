// @graupl/graupl carousel component styles.

@use "defaults";
@use "variables" as *;
@use "../../defaults" as root-defaults;
@use "../../mixins/layer" as *;
@use "../../base/button/variables" as button-variables;

#{defaults.$carousel-selector} {
  display: grid;
  position: relative;
  grid-template-columns: [slide-start autoplay-start] auto [autoplay-end tabs-start] 1fr [tabs-end previous-start] auto [previous-end next-start] auto [next-end slide-end];
  grid-template-rows: [slide-start] 1fr [controls-start] auto [controls-end slide-end tabs-start] auto [tabs-end];
  isolation: isolate;

  &[data-graupl-action="next"] {
    #{defaults.$carousel-item-selector} {
      &#{defaults.$carousel-previous-item-selector} {
        transform: translateX(
          calc(
            -1 * var(--#{root-defaults.$prefix}-carousel-item-max-width, 100%)
          )
        );

        &#{defaults.$carousel-active-item-selector} {
          transform: translateX(0);
        }
      }

      &#{defaults.$carousel-next-item-selector} {
        transform: translateX(
          var(--#{root-defaults.$prefix}-carousel-item-max-width, 100%)
        );

        &#{defaults.$carousel-active-item-selector} {
          transform: translateX(0);
        }
      }
    }
  }

  &[data-graupl-action="previous"] {
    #{defaults.$carousel-item-selector} {
      &#{defaults.$carousel-previous-item-selector} {
        transform: translateX(
          var(--#{root-defaults.$prefix}-carousel-item-max-width, 100%)
        );

        &#{defaults.$carousel-active-item-selector} {
          transform: translateX(0);
        }
      }

      &#{defaults.$carousel-next-item-selector} {
        transform: translateX(
          calc(
            -1 * var(--#{root-defaults.$prefix}-carousel-item-max-width, 100%)
          )
        );

        &#{defaults.$carousel-active-item-selector} {
          transform: translateX(0);
        }
      }
    }
  }
}

#{defaults.$carousel-control-container-selector} {
  display: contents;
}

#{defaults.$carousel-control-selector} {
  &#{defaults.$carousel-autoplay-selector} {
    grid-column: autoplay;
    grid-row: controls;
  }

  &#{defaults.$carousel-play-selector}::before {
    content: "▶";
    display: inline-block;
  }

  &#{defaults.$carousel-pause-selector}::before {
    content: "❚❚";
    display: inline-block;
  }

  &#{defaults.$carousel-next-selector} {
    grid-column: next;
    grid-row: controls;

    &::before {
      content: "▶";
      display: inline-block;
    }
  }

  &#{defaults.$carousel-previous-selector} {
    grid-column: previous;
    grid-row: controls;

    &::before {
      content: "◀";
      display: inline-block;
    }
  }
}

#{defaults.$carousel-item-container-selector} {
  display: grid;
  z-index: -1;
  grid-area: slide;
  grid-template-areas: "items";
  overflow-x: hidden;
  isolation: isolate;
}

#{defaults.$carousel-item-selector} {
  z-index: -1;
  grid-area: items;
  max-width: var(--#{root-defaults.$prefix}-carousel-item-max-width, 100%);
  opacity: 0;

  &#{defaults.$carousel-active-item-selector} {
    z-index: 1;
    transform: translateX(0);
    transition: transform
      var(--#{root-defaults.$prefix}-carousel-transition-duration, 500ms)
      ease-in-out;
    opacity: 1;
  }

  &#{defaults.$carousel-previous-item-selector} {
    z-index: 1;
    transform: translateX(
      calc(-1 * var(--#{root-defaults.$prefix}-carousel-item-max-width, 100%))
    );
    transition: transform
      var(--#{root-defaults.$prefix}-carousel-transition-duration, 500ms)
      ease-in-out;
    opacity: 1;

    &#{defaults.$carousel-active-item-selector} {
      transform: translateX(0);
    }
  }

  &#{defaults.$carousel-next-item-selector} {
    z-index: 1;
    transform: translateX(
      var(--#{root-defaults.$prefix}-carousel-item-max-width, 100%)
    );
    opacity: 1;

    &#{defaults.$carousel-active-item-selector} {
      transform: translateX(0);
    }
  }
}

#{defaults.$carousel-tab-container-selector} {
  display: flex;
  grid-area: tabs;
  justify-content: center;
  gap: 0.5rem;
}

#{defaults.$carousel-tab-selector} {
  --#{root-defaults.$prefix}-button-border-radius: 50%;

  &#{defaults.$carousel-active-item-selector} {
    --#{root-defaults.$prefix}-button-background: #{button-variables.$button-active-background};
    --#{root-defaults.$prefix}-button-color: #{button-variables.$button-active-color};
  }
}
