// Table component styles.

@use "variables" as *;
@use "defaults";
@use "../../mixins/layer" as *;
@use "../../defaults" as root-defaults;
@use "../../functions/theme";

@include layer(component) {
  table {
    @each $variant in theme.variants() {
      &.#{$variant},
      .#{$variant} {
        @each $prop, $key in defaults.$table-theme-map {
          --#{root-defaults.$prefix}-table-#{$prop}: #{theme.get($variant, $key)};
        }
      }
    }

    &.bordered {
      border-collapse: collapse;
      border-width: $table-border-width;
      border-style: $table-border-style;
      border-color: $table-border-color;

      tr > * {
        border-width: $table-cell-border-width;
        border-style: $table-cell-border-style;
        border-color: $table-cell-border-color;
      }
    }

    &.striped-columns {
      tbody tr:nth-child(odd) > * {
        background: $table-striped-background;
        color: $table-striped-color;
      }
    }

    &.striped-rows {
      tbody tr > :nth-child(odd) {
        background: $table-striped-background;
        color: $table-striped-color;
      }
    }

    &.hoverable {
      tbody tr:hover > * {
        background: $table-hover-background;
        color: $table-hover-color;
      }
    }

    .highlight {
      --#{root-defaults.$prefix}-table-cell-background: #{$table-highlight-background};
      --#{root-defaults.$prefix}-table-cell-color: #{$table-highlight-color};
      --#{root-defaults.$prefix}-table-header-background: #{$table-highlight-background};
      --#{root-defaults.$prefix}-table-header-color: #{$table-highlight-color};
      --#{root-defaults.$prefix}-table-striped-background: #{$table-highlight-background};
      --#{root-defaults.$prefix}-table-striped-color: #{$table-highlight-color};
    }
  }

  .responsive-table {
    display: block;
    width: 100%;
    overflow: scroll hidden;

    table {
      width: 100%;
      margin-bottom: 0;
    }
  }
}
