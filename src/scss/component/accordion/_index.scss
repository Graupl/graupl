// @graupl/graupl accordion component styles.

@use "defaults";
@use "variables" as *;
@use "../../base/button/mixins" as button-mixins;
@use "../../defaults" as root-defaults;
@use "../../mixins/layer" as *;
@use "sass:map";

#{defaults.$accordion-selector} {
  @include layer(component) {
    display: flex;
    flex-flow: column nowrap;
    padding: $accordion-padding;
    gap: $accordion-gap;

    > #{defaults.$accordion-item-selector} {
      &:not(:first-child) {
        margin-top: calc(-1 * #{$accordion-item-border-width});
      }
    }
  }

  @include layer(theme) {
    background: $accordion-background;
    color: $accordion-color;
  }
}

#{defaults.$accordion-item-selector} {
  @include layer(component) {
    border: $accordion-item-border;
    border-radius: $accordion-item-border-radius;
    overflow: hidden;
    isolation: isolate;

    &#{defaults.$accordion-item-close-selector}
      #{defaults.$accordion-item-content-selector} {
      display: none;
      opacity: 0;
      height: 0;
    }

    &#{defaults.$accordion-item-open-selector}
      #{defaults.$accordion-item-content-selector} {
      display: block;
      opacity: 1;
      height: auto;
    }

    &#{defaults.$accordion-item-transition-selector}
      #{defaults.$accordion-item-content-selector} {
      display: block;
      opacity: 0;
      height: 0;
    }
  }

  @include layer(theme) {
    border-color: $accordion-item-border-color;
  }
}

#{defaults.$accordion-item-toggle-selector} {
  @include button-mixins.apply-button();

  @include layer(component) {
    padding: $accordion-item-toggle-padding;
    transform: $accordion-item-toggle-transform;
    transition: $accordion-item-toggle-transition;
    z-index: 2;

    @each $selector in map.get(root-defaults.$state-selectors, visited) {
      &#{$selector} {
        --#{root-defaults.$prefix}-accordion-item-toggle-transform: #{$accordion-item-toggle-visited-transform};
      }
    }

    @each $selector in map.get(root-defaults.$state-selectors, focus) {
      &#{$selector} {
        --#{root-defaults.$prefix}-accordion-item-toggle-transform: #{$accordion-item-toggle-focus-transform};
      }
    }

    @each $selector in map.get(root-defaults.$state-selectors, hover) {
      &#{$selector} {
        --#{root-defaults.$prefix}-accordion-item-toggle-transform: #{$accordion-item-toggle-hover-transform};
      }
    }

    @each $selector in map.get(root-defaults.$state-selectors, active) {
      &#{$selector} {
        --#{root-defaults.$prefix}-accordion-item-toggle-transform: #{$accordion-item-toggle-active-transform};
      }
    }

    @each $selector in map.get(root-defaults.$state-selectors, disabled) {
      &#{$selector} {
        --#{root-defaults.$prefix}-accordion-item-toggle-transform: #{$accordion-item-toggle-disabled-transform};
      }
    }

    &::after {
      content: "â–¼";
      display: flex;
      align-items: center;
      justify-content: center;
      margin-left: auto;
      transform: rotate(0);
      transition: transform 0.3s ease;
    }

    &[aria-expanded="true"] {
      &::after {
        transform: rotate(-180deg);
      }
    }
  }
}

#{defaults.$accordion-item-header-selector} {
  @include layer(component) {
    padding: $accordion-item-header-padding;
    margin: $accordion-item-header-margin;
  }
}

#{defaults.$accordion-item-title-selector} {
  @include layer(component) {
    padding: $accordion-item-title-padding;
    margin: $accordion-item-title-margin;

    &,
    #{defaults.$accordion-item-toggle-selector} {
      display: flex;
      align-items: center;
      justify-content: flex-start;
      width: 100%;
    }
  }

  @include layer(theme) {
    &,
    #{defaults.$accordion-item-toggle-selector} {
      font-size: $accordion-title-font-size;
      font-weight: $accordion-title-font-weight;
      line-height: $accordion-title-line-height;
      font-family: $accordion-title-font-family;
    }
  }
}

#{defaults.$accordion-item-content-selector} {
  @include layer(component) {
    display: flex;
    flex-flow: column nowrap;
    gap: $accordion-item-content-gap;
    padding: $accordion-item-content-padding;
  }
}

#{defaults.$accordion-item-body-selector} {
  @include layer(component) {
    padding: $accordion-item-body-padding;
  }
}

#{defaults.$accordion-item-footer-selector} {
  @include layer(component) {
    padding: $accordion-item-footer-padding;
  }
}
