// Graupl spacing utilities.

@use "variables" as *;
@use "defaults" as defaults;
@use "../../mixins/layer" as *;
@use "../../functions/important";
@use "../../variables" as root-variables;
@use "../../defaults" as root-defaults;

@include layer(utilities) {
  // For each spacing property, create a utility class.
  @each $name, $property in defaults.$spacing-properties {
    @each $key, $value in root-variables.$spacers {
      .#{$name}-#{$key} {

        // If we're dealing with gap, column-gap, or row-gap inside of .columns, we should update
        // the columns-column-gap property instead of the raw property.
        @if $name == "g" {
          &.columns {
            --#{root-defaults.$prefix}-columns-column-gap: #{important.insert($value)};
            --#{root-defaults.$prefix}-columns-row-gap: #{important.insert($value)};
          }

          &:not(.columns) {
            @each $prop in $property {
              #{$prop}: important.insert($value);
            }
          }
        } @else if $name == "cg" {
          &.columns {
            --#{root-defaults.$prefix}-columns-column-gap: #{important.insert($value)};
          }

          &:not(.columns) {
            @each $prop in $property {
              #{$prop}: important.insert($value);
            }
          }
        } @else if $name == "rg" {
          &.columns {
            --#{root-defaults.$prefix}-columns-row-gap: #{important.insert($value)};
          }

          &:not(.columns) {
            @each $prop in $property {
              #{$prop}: important.insert($value);
            }
          }
        } @else {
          @each $prop in $property {
            #{$prop}: important.insert($value);
          }
        }
      }
    }
  }
}
